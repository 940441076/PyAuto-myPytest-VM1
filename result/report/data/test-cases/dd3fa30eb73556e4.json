{"uid":"dd3fa30eb73556e4","name":"查看上下位机软件版本","fullName":"testcases.systemSetting.test_systemSetting.Test_SystemSettingPage#test_check_version","historyId":"24958d1a0f4010ebe654e22a80d37728","time":{"start":1691377726045,"stop":1691377752759,"duration":26714},"description":"查看上下位机软件版本","descriptionHtml":"<p>查看上下位机软件版本</p>\n","status":"failed","statusMessage":"AssertionError: assert False","statusTrace":"self = <test_systemSetting.Test_SystemSettingPage object at 0x0000028CA54FC0D0>\n\n    @allure.title('查看上下位机软件版本')\n    def test_check_version(self):\n        allure.dynamic.description('查看上下位机软件版本')\n        try:\n            app = common_util.connect_application()\n            common_util.back_systemSettingPage()\n            deviceType_SWV = common_util.read_systemInfo()['SWV']\n            deviceType_MC = common_util.read_systemInfo()['MC']\n            deviceType_MDL = common_util.read_systemInfo()['MDL']\n            with allure.step('检查上位机软件版本'):\n                deviceType_text = app['血管内断层成像系统'].child_window(title=\"{}\".format(deviceType_SWV), auto_id=\"txtVersion\", control_type=\"Text\")\n                time.sleep(1)\n                common_util.screen_shot('上位机软件版本：{}'.format(deviceType_SWV))\n>               assert deviceType_text.exists()\nE               assert False\nE                +  where False = <bound method WindowSpecification.exists of <pywinauto.application.WindowSpecification object at 0x0000028CA6FE8790>>()\nE                +    where <bound method WindowSpecification.exists of <pywinauto.application.WindowSpecification object at 0x0000028CA6FE8790>> = <pywinauto.application.WindowSpecification object at 0x0000028CA6FE8790>.exists\n\ntestcases\\systemSetting\\test_systemSetting.py:496: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_systemSetting.Test_SystemSettingPage object at 0x0000028CA54FC0D0>\n\n    @allure.title('查看上下位机软件版本')\n    def test_check_version(self):\n        allure.dynamic.description('查看上下位机软件版本')\n        try:\n            app = common_util.connect_application()\n            common_util.back_systemSettingPage()\n            deviceType_SWV = common_util.read_systemInfo()['SWV']\n            deviceType_MC = common_util.read_systemInfo()['MC']\n            deviceType_MDL = common_util.read_systemInfo()['MDL']\n            with allure.step('检查上位机软件版本'):\n                deviceType_text = app['血管内断层成像系统'].child_window(title=\"{}\".format(deviceType_SWV), auto_id=\"txtVersion\", control_type=\"Text\")\n                time.sleep(1)\n                common_util.screen_shot('上位机软件版本：{}'.format(deviceType_SWV))\n                assert deviceType_text.exists()\n                time.sleep(1)\n            with allure.step('打开工程师面板'):\n                common_util.open_engineerMode()\n                show_test = app['血管内断层成像系统'].child_window(title=\"工程师\", auto_id=\"btnOpenEngineer\",\n                                                                   control_type=\"Button\")\n                rect = show_test.rectangle().mid_point()\n                mouse.click(coords=(rect.x, rect.y))\n                time.sleep(1)\n            with allure.step('查看MC版本：'):\n                MC = app['血管内断层成像系统'].child_window(title=\"?boardMC\", auto_id=\"btnGetMcBoardInfo\", control_type=\"Button\")\n                rect = MC.rectangle().mid_point()\n                mouse.click(coords=(rect.x, rect.y))\n                time.sleep(0.5)\n                ok_btn = app['提示'].child_window(title=\"确 定\", auto_id=\"OkButton\", control_type=\"Button\").wait(\n                    wait_for='exists', timeout=10)\n                time.sleep(1)\n                common_util.screen_shot('MC版本：{}'.format(deviceType_MC))\n                content = app['提示']['Pane'].texts()[0]\n                assert deviceType_MC in content\n                ok_btn.click()\n                time.sleep(1)\n            with allure.step('查看MDL版本：'):\n                MC = app['血管内断层成像系统'].child_window(title=\"?boardMDL\", auto_id=\"btnGetMdlBoardInfo\", control_type=\"Button\")\n                rect = MC.rectangle().mid_point()\n                mouse.click(coords=(rect.x, rect.y))\n                time.sleep(0.5)\n                ok_btn = app['提示'].child_window(title=\"确 定\", auto_id=\"OkButton\", control_type=\"Button\").wait(\n                    wait_for='exists', timeout=10)\n                time.sleep(1)\n                common_util.screen_shot('MDL版本：{}'.format(deviceType_MDL))\n                content = app['提示']['Pane'].texts()[0]\n                assert deviceType_MDL in content\n                ok_btn.click()\n                time.sleep(1)\n            with allure.step('关闭工程师面板，退出工程师模式'):\n                test_pane = app['血管内断层成像系统'].child_window(title=\"工程师\", control_type=\"Window\")\n                test_pane.close()\n                time.sleep(1)\n                exit_test = app['血管内断层成像系统'].child_window(title=\"退出工程师模式\", auto_id=\"btnEngineerMode\",\n                                                                   control_type=\"Button\")\n                rect = exit_test.rectangle().mid_point()\n                mouse.click(coords=(rect.x, rect.y))\n                time.sleep(1)\n                common_util.screen_shot('退出工程师模式')\n            time.sleep(1)\n        except Exception as e:\n            time.sleep(1)\n            common_util.screen_shot('异常截图')\n            time.sleep(1)\n            common_util.kill_app()\n            time.sleep(2)\n            common_util.connect_application()\n            common_util.add_text(str(e))\n>           assert False\nE           assert False\n\ntestcases\\systemSetting\\test_systemSetting.py:550: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1691373017956,"stop":1691373018017,"duration":61},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1691373018017,"stop":1691373018017,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1691373018017,"stop":1691373018017,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"environ","time":{"start":1691373018017,"stop":1691373018017,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"testStage":{"description":"查看上下位机软件版本","status":"failed","statusMessage":"AssertionError: assert False","statusTrace":"self = <test_systemSetting.Test_SystemSettingPage object at 0x0000028CA54FC0D0>\n\n    @allure.title('查看上下位机软件版本')\n    def test_check_version(self):\n        allure.dynamic.description('查看上下位机软件版本')\n        try:\n            app = common_util.connect_application()\n            common_util.back_systemSettingPage()\n            deviceType_SWV = common_util.read_systemInfo()['SWV']\n            deviceType_MC = common_util.read_systemInfo()['MC']\n            deviceType_MDL = common_util.read_systemInfo()['MDL']\n            with allure.step('检查上位机软件版本'):\n                deviceType_text = app['血管内断层成像系统'].child_window(title=\"{}\".format(deviceType_SWV), auto_id=\"txtVersion\", control_type=\"Text\")\n                time.sleep(1)\n                common_util.screen_shot('上位机软件版本：{}'.format(deviceType_SWV))\n>               assert deviceType_text.exists()\nE               assert False\nE                +  where False = <bound method WindowSpecification.exists of <pywinauto.application.WindowSpecification object at 0x0000028CA6FE8790>>()\nE                +    where <bound method WindowSpecification.exists of <pywinauto.application.WindowSpecification object at 0x0000028CA6FE8790>> = <pywinauto.application.WindowSpecification object at 0x0000028CA6FE8790>.exists\n\ntestcases\\systemSetting\\test_systemSetting.py:496: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_systemSetting.Test_SystemSettingPage object at 0x0000028CA54FC0D0>\n\n    @allure.title('查看上下位机软件版本')\n    def test_check_version(self):\n        allure.dynamic.description('查看上下位机软件版本')\n        try:\n            app = common_util.connect_application()\n            common_util.back_systemSettingPage()\n            deviceType_SWV = common_util.read_systemInfo()['SWV']\n            deviceType_MC = common_util.read_systemInfo()['MC']\n            deviceType_MDL = common_util.read_systemInfo()['MDL']\n            with allure.step('检查上位机软件版本'):\n                deviceType_text = app['血管内断层成像系统'].child_window(title=\"{}\".format(deviceType_SWV), auto_id=\"txtVersion\", control_type=\"Text\")\n                time.sleep(1)\n                common_util.screen_shot('上位机软件版本：{}'.format(deviceType_SWV))\n                assert deviceType_text.exists()\n                time.sleep(1)\n            with allure.step('打开工程师面板'):\n                common_util.open_engineerMode()\n                show_test = app['血管内断层成像系统'].child_window(title=\"工程师\", auto_id=\"btnOpenEngineer\",\n                                                                   control_type=\"Button\")\n                rect = show_test.rectangle().mid_point()\n                mouse.click(coords=(rect.x, rect.y))\n                time.sleep(1)\n            with allure.step('查看MC版本：'):\n                MC = app['血管内断层成像系统'].child_window(title=\"?boardMC\", auto_id=\"btnGetMcBoardInfo\", control_type=\"Button\")\n                rect = MC.rectangle().mid_point()\n                mouse.click(coords=(rect.x, rect.y))\n                time.sleep(0.5)\n                ok_btn = app['提示'].child_window(title=\"确 定\", auto_id=\"OkButton\", control_type=\"Button\").wait(\n                    wait_for='exists', timeout=10)\n                time.sleep(1)\n                common_util.screen_shot('MC版本：{}'.format(deviceType_MC))\n                content = app['提示']['Pane'].texts()[0]\n                assert deviceType_MC in content\n                ok_btn.click()\n                time.sleep(1)\n            with allure.step('查看MDL版本：'):\n                MC = app['血管内断层成像系统'].child_window(title=\"?boardMDL\", auto_id=\"btnGetMdlBoardInfo\", control_type=\"Button\")\n                rect = MC.rectangle().mid_point()\n                mouse.click(coords=(rect.x, rect.y))\n                time.sleep(0.5)\n                ok_btn = app['提示'].child_window(title=\"确 定\", auto_id=\"OkButton\", control_type=\"Button\").wait(\n                    wait_for='exists', timeout=10)\n                time.sleep(1)\n                common_util.screen_shot('MDL版本：{}'.format(deviceType_MDL))\n                content = app['提示']['Pane'].texts()[0]\n                assert deviceType_MDL in content\n                ok_btn.click()\n                time.sleep(1)\n            with allure.step('关闭工程师面板，退出工程师模式'):\n                test_pane = app['血管内断层成像系统'].child_window(title=\"工程师\", control_type=\"Window\")\n                test_pane.close()\n                time.sleep(1)\n                exit_test = app['血管内断层成像系统'].child_window(title=\"退出工程师模式\", auto_id=\"btnEngineerMode\",\n                                                                   control_type=\"Button\")\n                rect = exit_test.rectangle().mid_point()\n                mouse.click(coords=(rect.x, rect.y))\n                time.sleep(1)\n                common_util.screen_shot('退出工程师模式')\n            time.sleep(1)\n        except Exception as e:\n            time.sleep(1)\n            common_util.screen_shot('异常截图')\n            time.sleep(1)\n            common_util.kill_app()\n            time.sleep(2)\n            common_util.connect_application()\n            common_util.add_text(str(e))\n>           assert False\nE           assert False\n\ntestcases\\systemSetting\\test_systemSetting.py:550: AssertionError","steps":[{"name":"检查上位机软件版本","time":{"start":1691377730166,"stop":1691377731726,"duration":1560},"status":"failed","statusMessage":"AssertionError: assert False\n +  where False = <bound method WindowSpecification.exists of <pywinauto.application.WindowSpecification object at 0x0000028CA6FE8790>>()\n +    where <bound method WindowSpecification.exists of <pywinauto.application.WindowSpecification object at 0x0000028CA6FE8790>> = <pywinauto.application.WindowSpecification object at 0x0000028CA6FE8790>.exists\n","statusTrace":"  File \"D:\\workspace\\pytest-VM1\\testcases\\systemSetting\\test_systemSetting.py\", line 496, in test_check_version\n    assert deviceType_text.exists()\n","steps":[],"attachments":[{"uid":"fda01e85fb857714","name":"上位机软件版本：VM1-SWV1.1.1.2","source":"fda01e85fb857714.jpg","type":"image/jpg","size":41966}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":1,"stepsCount":0,"hasContent":true}],"attachments":[{"uid":"ab11864d2b5b1f91","name":"异常截图","source":"ab11864d2b5b1f91.jpg","type":"image/jpg","size":41966},{"uid":"b37971b2a1d97862","name":"assert False\n +  where False = <bound method WindowSpecification.exists of <pywinauto.application.WindowSpecification object at 0x0000028CA6FE8790>>()\n +    where <bound method WindowSpecification.exists of <pywinauto.application.WindowSpecification object at 0x0000028CA6FE8790>> = <pywinauto.application.WindowSpecification object at 0x0000028CA6FE8790>.exists","source":"b37971b2a1d97862.txt","type":"text/plain","size":0}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":3,"stepsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"feature","value":"系统设置界面"},{"name":"tag","value":"run(order=6)"},{"name":"parentSuite","value":"testcases.systemSetting"},{"name":"suite","value":"test_systemSetting"},{"name":"subSuite","value":"Test_SystemSettingPage"},{"name":"host","value":"DESKTOP-8BNU2EL"},{"name":"thread","value":"924-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcases.systemSetting.test_systemSetting"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["run(order=6)"]},"source":"dd3fa30eb73556e4.json","parameterValues":[]}