{"uid":"4cb4e6201a40b987","name":"筛选和条件搜索","fullName":"testcases.patientList.test_patientList.Test_PatientListPage#test_filter_search","historyId":"10c73b85c38e0b3251ebce0240352252","time":{"start":1691373778084,"stop":1691374290693,"duration":512609},"description":"筛选类型后，输入不同的关键词搜索，对比结果","descriptionHtml":"<p>筛选类型后，输入不同的关键词搜索，对比结果</p>\n","status":"failed","statusMessage":"AssertionError: assert False","statusTrace":"self = <test_patientList.Test_PatientListPage object at 0x0000028CA54CD9D0>\n\n    @allure.title('筛选和条件搜索')\n    def test_filter_search(self):\n        allure.dynamic.description('筛选类型后，输入不同的关键词搜索，对比结果')\n        try:\n            app = common_util.connect_application()\n            common_util.del_all_patients()\n            common_util.import_testdata(index=1)\n            time.sleep(2)\n            common_util.back_patientListPage()\n            with allure.step('选择不同类型，判断筛选结果'):\n                OCT_type = app['血管内断层成像系统'].child_window(auto_id=\"cmbType\", control_type=\"ComboBox\")\n                type = OCT_type.texts()\n                for i in range(len(type)):\n                    OCT_type.select(i + 1)\n                    time.sleep(1)\n                    if type[i] == 'ALL':\n                        patient_list = app['血管内断层成像系统'].child_window(auto_id=\"dataGridPatientInfo\",\n                                                                                   control_type=\"DataGrid\")\n                        patient_info = patient_list.texts()\n>                       assert len(patient_info) == 4\nE                       AssertionError: assert 1 == 4\nE                        +  where 1 = len([['1', '1', '1', '男', '2023-04-10', '2023-04-10 13:53:46', ...]])\n\ntestcases\\patientList\\test_patientList.py:155: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_patientList.Test_PatientListPage object at 0x0000028CA54CD9D0>\n\n    @allure.title('筛选和条件搜索')\n    def test_filter_search(self):\n        allure.dynamic.description('筛选类型后，输入不同的关键词搜索，对比结果')\n        try:\n            app = common_util.connect_application()\n            common_util.del_all_patients()\n            common_util.import_testdata(index=1)\n            time.sleep(2)\n            common_util.back_patientListPage()\n            with allure.step('选择不同类型，判断筛选结果'):\n                OCT_type = app['血管内断层成像系统'].child_window(auto_id=\"cmbType\", control_type=\"ComboBox\")\n                type = OCT_type.texts()\n                for i in range(len(type)):\n                    OCT_type.select(i + 1)\n                    time.sleep(1)\n                    if type[i] == 'ALL':\n                        patient_list = app['血管内断层成像系统'].child_window(auto_id=\"dataGridPatientInfo\",\n                                                                                   control_type=\"DataGrid\")\n                        patient_info = patient_list.texts()\n                        assert len(patient_info) == 4\n                        time.sleep(1)\n                        common_util.screen_shot('未筛选时结果')\n                        search_edit = app['血管内断层成像系统'].child_window(auto_id=\"autoText\",\n                                                                                  control_type=\"Edit\")\n                        search_edit.type_keys('备注')\n                        search_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnSearch\",\n                                                                                 control_type=\"Button\")\n                        search_btn.click()\n                        time.sleep(1)\n                        patient_list = app['血管内断层成像系统'].child_window(auto_id=\"dataGridPatientInfo\",\n                                                                                   control_type=\"DataGrid\")\n                        patient_info = patient_list.texts()\n                        mark = []\n                        for j in range(len(patient_info)):\n                            mark.append(patient_info[j][7])\n                        assert mark == ['备注DSA', '备注OCT']\n                        time.sleep(1)\n                        common_util.screen_shot('ALL结果')\n                        clear_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnClear\",\n                                                                                control_type=\"Button\")\n                        clear_btn.click()\n                        time.sleep(1)\n                        search_edit.type_keys('测试')\n                        search_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnSearch\",\n                                                                                 control_type=\"Button\")\n                        search_btn.click()\n                        time.sleep(1)\n                        patient_list = app['血管内断层成像系统'].child_window(auto_id=\"dataGridPatientInfo\",\n                                                                                   control_type=\"DataGrid\")\n                        patient_info = patient_list.texts()\n                        assert 0 == len(patient_info)\n                        clear_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnClear\",\n                                                                                control_type=\"Button\")\n                        clear_btn.click()\n                        time.sleep(1)\n                    elif type[i] == 'OCT':\n                        patient_list = app['血管内断层成像系统'].child_window(auto_id=\"dataGridPatientInfo\",\n                                                                                   control_type=\"DataGrid\")\n                        patient_info = patient_list.texts()\n                        assert len(patient_info)== 1\n                        search_edit = app['血管内断层成像系统'].child_window(auto_id=\"autoText\",\n                                                                                  control_type=\"Edit\")\n                        search_edit.type_keys('备注')\n                        search_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnSearch\",\n                                                                                 control_type=\"Button\")\n                        search_btn.click()\n                        time.sleep(1)\n                        patient_list = app['血管内断层成像系统'].child_window(auto_id=\"dataGridPatientInfo\",\n                                                                                   control_type=\"DataGrid\")\n                        patient_info = patient_list.texts()\n                        mark = []\n                        for j in range(len(patient_info)):\n                            mark.append(patient_info[j][7])\n                        assert mark == ['备注OCT']\n                        time.sleep(1)\n                        common_util.screen_shot('OCT结果')\n                        clear_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnClear\",\n                                                                                control_type=\"Button\")\n                        clear_btn.click()\n                        time.sleep(1)\n                        search_edit.type_keys('测试')\n                        search_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnSearch\",\n                                                                                 control_type=\"Button\")\n                        search_btn.click()\n                        time.sleep(1)\n                        patient_list = app['血管内断层成像系统'].child_window(auto_id=\"dataGridPatientInfo\",\n                                                                                   control_type=\"DataGrid\")\n                        patient_info = patient_list.texts()\n                        assert 0== len(patient_info)\n                        clear_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnClear\",\n                                                                                control_type=\"Button\")\n                        clear_btn.click()\n                        time.sleep(1)\n                    elif type[i] == 'OCT-DSA':\n                        patient_list = app['血管内断层成像系统'].child_window(auto_id=\"dataGridPatientInfo\",\n                                                                                   control_type=\"DataGrid\")\n                        patient_info = patient_list.texts()\n                        assert len(patient_info)== 3\n                        search_edit = app['血管内断层成像系统'].child_window(auto_id=\"autoText\",\n                                                                                  control_type=\"Edit\")\n                        search_edit.type_keys('备注')\n                        search_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnSearch\",\n                                                                                 control_type=\"Button\")\n                        search_btn.click()\n                        time.sleep(1)\n                        patient_list = app['血管内断层成像系统'].child_window(auto_id=\"dataGridPatientInfo\",\n                                                                                   control_type=\"DataGrid\")\n                        patient_info = patient_list.texts()\n                        mark = []\n                        for j in range(len(patient_info)):\n                            mark.append(patient_info[j][7])\n                        assert mark==['备注DSA']\n                        time.sleep(1)\n                        common_util.screen_shot('OCT-DSA结果')\n                        clear_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnClear\",\n                                                                                control_type=\"Button\")\n                        clear_btn.click()\n                        time.sleep(1)\n                        search_edit.type_keys('测试')\n                        content = search_edit.texts()\n                        assert ['测试'] == content\n                        search_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnSearch\",\n                                                                                 control_type=\"Button\")\n                        search_btn.click()\n                        time.sleep(1)\n                        patient_list = app['血管内断层成像系统'].child_window(auto_id=\"dataGridPatientInfo\",\n                                                                                   control_type=\"DataGrid\")\n                        patient_info = patient_list.texts()\n                        assert 0== len(patient_info)\n    \n                        clear_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnClear\",\n                                                                                control_type=\"Button\")\n                        clear_btn.click()\n                        time.sleep(1)\n                        content = search_edit.texts()\n                        assert [''] == content\n                        time.sleep(1)\n                time.sleep(1)\n        except Exception as e:\n            time.sleep(1)\n            common_util.screen_shot('异常截图')\n            time.sleep(1)\n            common_util.kill_app()\n            time.sleep(2)\n            common_util.connect_application()\n            common_util.add_text(str(e))\n>           assert False\nE           assert False\n\ntestcases\\patientList\\test_patientList.py:282: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1691373017956,"stop":1691373018017,"duration":61},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1691373018017,"stop":1691373018017,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1691373018017,"stop":1691373018017,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"environ","time":{"start":1691373018017,"stop":1691373018017,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"testStage":{"description":"筛选类型后，输入不同的关键词搜索，对比结果","status":"failed","statusMessage":"AssertionError: assert False","statusTrace":"self = <test_patientList.Test_PatientListPage object at 0x0000028CA54CD9D0>\n\n    @allure.title('筛选和条件搜索')\n    def test_filter_search(self):\n        allure.dynamic.description('筛选类型后，输入不同的关键词搜索，对比结果')\n        try:\n            app = common_util.connect_application()\n            common_util.del_all_patients()\n            common_util.import_testdata(index=1)\n            time.sleep(2)\n            common_util.back_patientListPage()\n            with allure.step('选择不同类型，判断筛选结果'):\n                OCT_type = app['血管内断层成像系统'].child_window(auto_id=\"cmbType\", control_type=\"ComboBox\")\n                type = OCT_type.texts()\n                for i in range(len(type)):\n                    OCT_type.select(i + 1)\n                    time.sleep(1)\n                    if type[i] == 'ALL':\n                        patient_list = app['血管内断层成像系统'].child_window(auto_id=\"dataGridPatientInfo\",\n                                                                                   control_type=\"DataGrid\")\n                        patient_info = patient_list.texts()\n>                       assert len(patient_info) == 4\nE                       AssertionError: assert 1 == 4\nE                        +  where 1 = len([['1', '1', '1', '男', '2023-04-10', '2023-04-10 13:53:46', ...]])\n\ntestcases\\patientList\\test_patientList.py:155: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_patientList.Test_PatientListPage object at 0x0000028CA54CD9D0>\n\n    @allure.title('筛选和条件搜索')\n    def test_filter_search(self):\n        allure.dynamic.description('筛选类型后，输入不同的关键词搜索，对比结果')\n        try:\n            app = common_util.connect_application()\n            common_util.del_all_patients()\n            common_util.import_testdata(index=1)\n            time.sleep(2)\n            common_util.back_patientListPage()\n            with allure.step('选择不同类型，判断筛选结果'):\n                OCT_type = app['血管内断层成像系统'].child_window(auto_id=\"cmbType\", control_type=\"ComboBox\")\n                type = OCT_type.texts()\n                for i in range(len(type)):\n                    OCT_type.select(i + 1)\n                    time.sleep(1)\n                    if type[i] == 'ALL':\n                        patient_list = app['血管内断层成像系统'].child_window(auto_id=\"dataGridPatientInfo\",\n                                                                                   control_type=\"DataGrid\")\n                        patient_info = patient_list.texts()\n                        assert len(patient_info) == 4\n                        time.sleep(1)\n                        common_util.screen_shot('未筛选时结果')\n                        search_edit = app['血管内断层成像系统'].child_window(auto_id=\"autoText\",\n                                                                                  control_type=\"Edit\")\n                        search_edit.type_keys('备注')\n                        search_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnSearch\",\n                                                                                 control_type=\"Button\")\n                        search_btn.click()\n                        time.sleep(1)\n                        patient_list = app['血管内断层成像系统'].child_window(auto_id=\"dataGridPatientInfo\",\n                                                                                   control_type=\"DataGrid\")\n                        patient_info = patient_list.texts()\n                        mark = []\n                        for j in range(len(patient_info)):\n                            mark.append(patient_info[j][7])\n                        assert mark == ['备注DSA', '备注OCT']\n                        time.sleep(1)\n                        common_util.screen_shot('ALL结果')\n                        clear_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnClear\",\n                                                                                control_type=\"Button\")\n                        clear_btn.click()\n                        time.sleep(1)\n                        search_edit.type_keys('测试')\n                        search_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnSearch\",\n                                                                                 control_type=\"Button\")\n                        search_btn.click()\n                        time.sleep(1)\n                        patient_list = app['血管内断层成像系统'].child_window(auto_id=\"dataGridPatientInfo\",\n                                                                                   control_type=\"DataGrid\")\n                        patient_info = patient_list.texts()\n                        assert 0 == len(patient_info)\n                        clear_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnClear\",\n                                                                                control_type=\"Button\")\n                        clear_btn.click()\n                        time.sleep(1)\n                    elif type[i] == 'OCT':\n                        patient_list = app['血管内断层成像系统'].child_window(auto_id=\"dataGridPatientInfo\",\n                                                                                   control_type=\"DataGrid\")\n                        patient_info = patient_list.texts()\n                        assert len(patient_info)== 1\n                        search_edit = app['血管内断层成像系统'].child_window(auto_id=\"autoText\",\n                                                                                  control_type=\"Edit\")\n                        search_edit.type_keys('备注')\n                        search_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnSearch\",\n                                                                                 control_type=\"Button\")\n                        search_btn.click()\n                        time.sleep(1)\n                        patient_list = app['血管内断层成像系统'].child_window(auto_id=\"dataGridPatientInfo\",\n                                                                                   control_type=\"DataGrid\")\n                        patient_info = patient_list.texts()\n                        mark = []\n                        for j in range(len(patient_info)):\n                            mark.append(patient_info[j][7])\n                        assert mark == ['备注OCT']\n                        time.sleep(1)\n                        common_util.screen_shot('OCT结果')\n                        clear_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnClear\",\n                                                                                control_type=\"Button\")\n                        clear_btn.click()\n                        time.sleep(1)\n                        search_edit.type_keys('测试')\n                        search_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnSearch\",\n                                                                                 control_type=\"Button\")\n                        search_btn.click()\n                        time.sleep(1)\n                        patient_list = app['血管内断层成像系统'].child_window(auto_id=\"dataGridPatientInfo\",\n                                                                                   control_type=\"DataGrid\")\n                        patient_info = patient_list.texts()\n                        assert 0== len(patient_info)\n                        clear_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnClear\",\n                                                                                control_type=\"Button\")\n                        clear_btn.click()\n                        time.sleep(1)\n                    elif type[i] == 'OCT-DSA':\n                        patient_list = app['血管内断层成像系统'].child_window(auto_id=\"dataGridPatientInfo\",\n                                                                                   control_type=\"DataGrid\")\n                        patient_info = patient_list.texts()\n                        assert len(patient_info)== 3\n                        search_edit = app['血管内断层成像系统'].child_window(auto_id=\"autoText\",\n                                                                                  control_type=\"Edit\")\n                        search_edit.type_keys('备注')\n                        search_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnSearch\",\n                                                                                 control_type=\"Button\")\n                        search_btn.click()\n                        time.sleep(1)\n                        patient_list = app['血管内断层成像系统'].child_window(auto_id=\"dataGridPatientInfo\",\n                                                                                   control_type=\"DataGrid\")\n                        patient_info = patient_list.texts()\n                        mark = []\n                        for j in range(len(patient_info)):\n                            mark.append(patient_info[j][7])\n                        assert mark==['备注DSA']\n                        time.sleep(1)\n                        common_util.screen_shot('OCT-DSA结果')\n                        clear_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnClear\",\n                                                                                control_type=\"Button\")\n                        clear_btn.click()\n                        time.sleep(1)\n                        search_edit.type_keys('测试')\n                        content = search_edit.texts()\n                        assert ['测试'] == content\n                        search_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnSearch\",\n                                                                                 control_type=\"Button\")\n                        search_btn.click()\n                        time.sleep(1)\n                        patient_list = app['血管内断层成像系统'].child_window(auto_id=\"dataGridPatientInfo\",\n                                                                                   control_type=\"DataGrid\")\n                        patient_info = patient_list.texts()\n                        assert 0== len(patient_info)\n    \n                        clear_btn = app['血管内断层成像系统'].child_window(auto_id=\"btnClear\",\n                                                                                control_type=\"Button\")\n                        clear_btn.click()\n                        time.sleep(1)\n                        content = search_edit.texts()\n                        assert [''] == content\n                        time.sleep(1)\n                time.sleep(1)\n        except Exception as e:\n            time.sleep(1)\n            common_util.screen_shot('异常截图')\n            time.sleep(1)\n            common_util.kill_app()\n            time.sleep(2)\n            common_util.connect_application()\n            common_util.add_text(str(e))\n>           assert False\nE           assert False\n\ntestcases\\patientList\\test_patientList.py:282: AssertionError","steps":[{"name":"选择不同类型，判断筛选结果","time":{"start":1691374264572,"stop":1691374265832,"duration":1260},"status":"failed","statusMessage":"AssertionError: assert 1 == 4\n +  where 1 = len([['1', '1', '1', '男', '2023-04-10', '2023-04-10 13:53:46', ...]])\n","statusTrace":"  File \"D:\\workspace\\pytest-VM1\\testcases\\patientList\\test_patientList.py\", line 155, in test_filter_search\n    assert len(patient_info) == 4\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":0,"hasContent":true}],"attachments":[{"uid":"369931844b8d11b0","name":"异常截图","source":"369931844b8d11b0.jpg","type":"image/jpg","size":58148},{"uid":"dca621eb0b81b88a","name":"assert 1 == 4\n +  where 1 = len([['1', '1', '1', '男', '2023-04-10', '2023-04-10 13:53:46', ...]])","source":"dca621eb0b81b88a.txt","type":"text/plain","size":0}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":2,"stepsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"feature","value":"患者列表界面"},{"name":"tag","value":"run(order=2)"},{"name":"parentSuite","value":"testcases.patientList"},{"name":"suite","value":"test_patientList"},{"name":"subSuite","value":"Test_PatientListPage"},{"name":"host","value":"DESKTOP-8BNU2EL"},{"name":"thread","value":"924-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcases.patientList.test_patientList"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["run(order=2)"]},"source":"4cb4e6201a40b987.json","parameterValues":[]}